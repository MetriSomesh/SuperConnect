// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  email String @unique
  username String? @default("")
  password String
  interests String[] @default([])
  profileaPic String?
  bio String?
  twitter Twitter?
  accessToken String @default("")
  refreshToken String @default("")
  AIDescription String?
  Connections Connections[]
  Recommendations Recommendations[] 
  Invitation Invitation[]
}

model Twitter{
  id Int @id @default(autoincrement())
  userId Int  @unique
  user User @relation(fields: [userId],references: [id])
  account_id BigInt?
  username String?
  location String?
  descripiton String?
  name String?
}

model Connections{
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId],references: [id])
  account_id BigInt?
  username String?
  location String?
  followers Int?
  descripiton String?
  name String?
}

model Recommendations {
  id                Int    @id @default(autoincrement())
  userId            Int
  matchingPercentage Float
  user  User   @relation(fields: [userId], references: [id])
}

model Invitation {
  id          Int      @id @default(autoincrement())
  senderId    Int 
  receiverId  Int
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user  User   @relation(fields: [senderId], references: [id])
}